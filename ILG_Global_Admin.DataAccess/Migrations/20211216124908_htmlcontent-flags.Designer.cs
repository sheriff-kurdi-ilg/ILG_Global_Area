// <auto-generated />
using System;
using ILG_Global_Admin.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ILG_Global_Admin.DataAccess.Migrations
{
    [DbContext(typeof(ILG_Global_AdminContext))]
    [Migration("20211216124908_htmlcontent-flags")]
    partial class htmlcontentflags
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.ContactInformationDetail", b =>
                {
                    b.Property<int>("ContactInformationId")
                        .HasColumnType("int")
                        .HasColumnName("ContactInformationID");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactInformationId", "LanguageCode");

                    b.HasIndex(new[] { "LanguageCode" }, "IX_ContactInformationDetails_LanguageCode");

                    b.ToTable("ContactInformationDetails");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.ContactInformationMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FontAwsomeIconCssClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ContactInformationMasters");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.HtmlContentDetail", b =>
                {
                    b.Property<int>("HtmlContentId")
                        .HasColumnType("int")
                        .HasColumnName("HtmlContentID");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HtmlContentId", "LanguageCode");

                    b.HasIndex(new[] { "LanguageCode" }, "IX_HtmlContentDetails_LanguageCode");

                    b.ToTable("HtmlContentDetails");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.HtmlContentMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanBeDeletedByUser")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHasDescription")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHasSubTitle")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHasSummary")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHasTitle")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("HtmlContentMasters");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.ImageDetail", b =>
                {
                    b.Property<int>("ImageId")
                        .HasColumnType("int")
                        .HasColumnName("ImageID");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlternateText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OurServiceMasterId")
                        .HasColumnType("int")
                        .HasColumnName("OurServiceMasterID");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId", "LanguageCode");

                    b.HasIndex(new[] { "LanguageCode" }, "IX_ImageDetails_LanguageCode");

                    b.HasIndex(new[] { "OurServiceMasterId" }, "IX_ImageDetails_OurServiceMasterID");

                    b.ToTable("ImageDetails");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.ImageMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int?>("HtmlContentMasterId")
                        .HasColumnType("int")
                        .HasColumnName("HtmlContentMasterID");

                    b.Property<int?>("ImageMastersId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OurServiceMasterId")
                        .HasColumnType("int")
                        .HasColumnName("OurServiceMasterID");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "HtmlContentMasterId" }, "IX_ImageMasters_HtmlContentMasterID");

                    b.HasIndex(new[] { "ImageMastersId" }, "IX_ImageMasters_ImageMastersId");

                    b.HasIndex(new[] { "OurServiceMasterId" }, "IX_ImageMasters_OurServiceMasterID");

                    b.ToTable("ImageMasters");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.Language", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.NewsLetterSubscribe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("PreferredLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NewsLetterSubscribes");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.OurServiceDetail", b =>
                {
                    b.Property<int>("OurServiceId")
                        .HasColumnType("int")
                        .HasColumnName("OurServiceID");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OurServiceId", "LanguageCode");

                    b.HasIndex(new[] { "LanguageCode" }, "IX_OurServiceDetails_LanguageCode");

                    b.ToTable("OurServiceDetails");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.OurServiceMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ImageMastersId")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("OurServiceMasters");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.ShareViaEmailSubscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShareViaEmailSubscriber");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.SucessStoryDetail", b =>
                {
                    b.Property<int>("SucessStoryId")
                        .HasColumnType("int")
                        .HasColumnName("SucessStoryID");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SucessStoryId", "LanguageCode");

                    b.HasIndex(new[] { "LanguageCode" }, "IX_SucessStoryDetails_LanguageCode");

                    b.ToTable("SucessStoryDetails");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.SucessStoryMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("PdfFileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PDF_FileName");

                    b.Property<string>("PdfURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SucessStoryMasters");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.ContactInformationDetail", b =>
                {
                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.ContactInformationMaster", "ContactInformation")
                        .WithMany("ContactInformationDetails")
                        .HasForeignKey("ContactInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.Language", "LanguageCodeNavigation")
                        .WithMany("ContactInformationDetails")
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactInformation");

                    b.Navigation("LanguageCodeNavigation");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.HtmlContentDetail", b =>
                {
                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.HtmlContentMaster", "HtmlContent")
                        .WithMany("HtmlContentDetails")
                        .HasForeignKey("HtmlContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.Language", "LanguageCodeNavigation")
                        .WithMany("HtmlContentDetails")
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HtmlContent");

                    b.Navigation("LanguageCodeNavigation");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.ImageDetail", b =>
                {
                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.ImageMaster", "Image")
                        .WithMany("ImageDetails")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.Language", "LanguageCodeNavigation")
                        .WithMany("ImageDetails")
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.OurServiceMaster", "OurServiceMaster")
                        .WithMany("ImageDetails")
                        .HasForeignKey("OurServiceMasterId");

                    b.Navigation("Image");

                    b.Navigation("LanguageCodeNavigation");

                    b.Navigation("OurServiceMaster");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.ImageMaster", b =>
                {
                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.HtmlContentMaster", "HtmlContentMaster")
                        .WithMany("ImageMasters")
                        .HasForeignKey("HtmlContentMasterId");

                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.OurServiceMaster", "ImageMasters")
                        .WithMany("ImageMasterImageMasters")
                        .HasForeignKey("ImageMastersId");

                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.OurServiceMaster", "OurServiceMaster")
                        .WithMany("ImageMasterOurServiceMasters")
                        .HasForeignKey("OurServiceMasterId");

                    b.Navigation("HtmlContentMaster");

                    b.Navigation("ImageMasters");

                    b.Navigation("OurServiceMaster");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.OurServiceDetail", b =>
                {
                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.Language", "LanguageCodeNavigation")
                        .WithMany("OurServiceDetails")
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.OurServiceMaster", "OurService")
                        .WithMany("OurServiceDetails")
                        .HasForeignKey("OurServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageCodeNavigation");

                    b.Navigation("OurService");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.SucessStoryDetail", b =>
                {
                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.Language", "LanguageCodeNavigation")
                        .WithMany("SucessStoryDetails")
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.SucessStoryMaster", "SucessStory")
                        .WithMany("SucessStoryDetails")
                        .HasForeignKey("SucessStoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageCodeNavigation");

                    b.Navigation("SucessStory");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ILG_Global_Admin.BussinessLogic.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.ContactInformationMaster", b =>
                {
                    b.Navigation("ContactInformationDetails");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.HtmlContentMaster", b =>
                {
                    b.Navigation("HtmlContentDetails");

                    b.Navigation("ImageMasters");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.ImageMaster", b =>
                {
                    b.Navigation("ImageDetails");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.Language", b =>
                {
                    b.Navigation("ContactInformationDetails");

                    b.Navigation("HtmlContentDetails");

                    b.Navigation("ImageDetails");

                    b.Navigation("OurServiceDetails");

                    b.Navigation("SucessStoryDetails");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.OurServiceMaster", b =>
                {
                    b.Navigation("ImageDetails");

                    b.Navigation("ImageMasterImageMasters");

                    b.Navigation("ImageMasterOurServiceMasters");

                    b.Navigation("OurServiceDetails");
                });

            modelBuilder.Entity("ILG_Global_Admin.BussinessLogic.Models.SucessStoryMaster", b =>
                {
                    b.Navigation("SucessStoryDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
